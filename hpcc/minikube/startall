#!/bin/bash


numThorSlaves=4

cluster=mycluster1
subnet=10.1.0

netName="${cluster}net_${subnet}"
chknet=$(docker network ls | awk '{print $2}' | grep "^${netname}")

if [ -z "$chknet" ]; then
 echo "CREATING NETWORK: docker network create --subnet=${subnet}.0/24 ${netname}"
 docker network create --subnet=${subnet}.0/24 ${netname}
fi

DOCKEROPTS="-d"

# dali
docker run $DOCKEROPTS --rm --net ${netName} --privileged --name mydali -h mydali -v /home/jsmith/git/docker/hpcc/shared/:/shared -v /home/jsmith/git/docker/hpcc/clusterFolders/mycluster1/:/data -it jcs/hpcc-dali:latest

#esp
docker run $DOCKEROPTS -p 8010:8010 --rm --net ${netName} --privileged --name myesp -h myesp -v /home/jsmith/git/docker/hpcc/shared/:/shared -v /home/jsmith/git/docker/hpcc/clusterFolders/mycluster1/:/data -it jcs/hpcc-esp:latest

# eclccserver
docker run $DOCKEROPTS --rm --net ${netName} --privileged --name myeclccserver -h myeclccserver -v /home/jsmith/git/docker/hpcc/shared/:/shared -v /home/jsmith/git/docker/hpcc/clusterFolders/mycluster1/:/data -it jcs/hpcc-eclccserver:latest

# agentexec
docker run $DOCKEROPTS --rm --net ${netName} --privileged --name myeclagent -h myeclagent -v /home/jsmith/git/docker/hpcc/shared/:/shared -v /home/jsmith/git/docker/hpcc/clusterFolders/mycluster1/:/data -it jcs/hpcc-eclagent:latest

# thormaster
docker run $DOCKEROPTS --rm --net ${netName} --privileged --name mythormaster -h mythormaster -v /home/jsmith/git/docker/hpcc/shared/:/shared -v /home/jsmith/git/docker/hpcc/clusterFolders/mycluster1/:/data -it jcs/hpcc-thormaster:latest numThorSlaves=${numThorSlaves}

thormasterdkip=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' mythormaster)

for slave in $(seq 1 ${numThorSlaves})
do
  docker run $DOCKEROPTS --rm --net ${netName} --privileged -v /home/jsmith/git/docker/hpcc/shared/:/shared -v /home/jsmith/git/docker/hpcc/clusterFolders/mycluster1/:/data -it jcs/hpcc-thorslave:latest /scripts/init/start-hpcccomp.sh thorslave_lcr mythor "MASTER=${thormasterdkip}"
done

wait
